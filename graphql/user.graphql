

type User {
    id: ID!
    first_name: String!
    last_name: String!
    email: String!
    city: String
    state: String
    country: String
    tag_line: String
    qualification: String
    certification: String
    experience: String
    tag_line: String
    type:String
    avatar: String
    hourly_rate: Float
    created_at: DateTime!
    updated_at: DateTime!
    min_hourly_rate: Float
    max_hourly_rate: Float
    topicOfInterest:  [TopicOfInterest] @field(resolver:"App\\GraphQL\\Queries\\TopicOfInterest@getUserTopic")
    video_url: String
    card_brand: String
    card_last_four: String
    blog: [Blog!] @hasMany
}


input EditProfileInput {
	first_name: String
    last_name: String
    email: String
    profile_image: String
    state: String
    city: String
    country: String
    tag_line: String
    qualification: String
    certification: String
    experience: String
    type: String
    hourly_rate: String
    tag_line: String
    min_hourly_rate: Float
    max_hourly_rate: Float
    topic_ids: [ID]
}



